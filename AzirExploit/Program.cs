using System.Dynamic;
using EloBuddy;
using EloBuddy.SDK;
using EloBuddy.SDK.Events;
using EloBuddy.SDK.Menu;
using EloBuddy.SDK.Menu.Values;

namespace AzirExploit
{
    class Program
    {
        static void Main(string[] args)
        {
            //Loading.OnLoadingComplete += LoadingComplete;
            Obj_AI_Base.OnProcessSpellCast += OnProcessSpellCast;
        }

        public static CheckBox _useExploit;
        public static bool UseExploit
        {
            get { return _useExploit.CurrentValue; }
        }
        

        //private static void LoadingComplete(System.EventArgs args)
        //{
        //    var mainmenu = MainMenu.AddMenu("Azir Exploit", "azirexploitmenu");
        //    //var settingsmenu = mainmenu.AddSubMenu("Settings", "exploitsettings");
        //    _useExploit = mainmenu.Add("UseExploit", new CheckBox("Enable exploits", false));
        //}

        private static void OnProcessSpellCast(Obj_AI_Base sender, GameObjectProcessSpellCastEventArgs args)
        {
            if (!sender.IsMe)
            {
                return;
            }

            //if (ObjectManager.Player.ChampionName == "Azir" && args.SData.Name.ToLower().Contains("attack"))
            //{
            //    ObjectManager.Player.Spellbook.CastSpell(SpellSlot.Q, Game.CursorPos, true);
            //}

            if (args.SData.Name == ObjectManager.Player.Spellbook.GetSpell(SpellSlot.W).SData.Name
                            || args.SData.Name.ToLower().Contains("attack"))
            {
                var enemy = TargetSelector.GetTarget(825, DamageType.Magical);
                if (enemy != null)
                {
                    ObjectManager.Player.Spellbook.CastSpell(SpellSlot.Q, enemy.Position, true);
                }
            }
        }

        
    }
}
